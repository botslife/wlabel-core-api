options:
  docker: true

definitions:
  steps:
    - step: &docker-build-push
        name: Build docker image and push
        image: google/cloud-sdk:alpine
        script:
          - export ARTIFACT_ID=lotus-core-api
          - export IMAGE_NAME=eu.gcr.io/${GCLOUD_PROJECT}/${ARTIFACT_ID}:${BITBUCKET_COMMIT}
          #Login to Google repo
          - echo $GCLOUD_API_KEYFILE | base64 -d > ./gcloud-api-key.json
          - gcloud auth activate-service-account --key-file gcloud-api-key.json
          - gcloud config set project ${GCLOUD_PROJECT}
          - cat ./gcloud-api-key.json | docker login -u _json_key --password-stdin https://eu.gcr.io
          #Buildind and pushing image to the Google repo
          - docker build --target development -t ${IMAGE_NAME} .
          - docker push ${IMAGE_NAME}

    - step: &helm-deploy
        name: helm install uat
        image: atlassian/pipelines-awscli
        script:
          - export TAG=${BITBUCKET_COMMIT}
          - wget -qO- https://get.helm.sh/helm-v3.6.3-linux-amd64.tar.gz | tar xvz
          - chmod +x ./linux-amd64/helm && mv ./linux-amd64/helm /usr/local/bin/helm
          - wget https://storage.googleapis.com/kubernetes-release/release/v1.18.0/bin/linux/amd64/kubectl
          - chmod +x ./kubectl && mv ./kubectl /usr/local/bin/kubectl
          - aws eks update-kubeconfig --name terraform-eks-gws-eu --region eu-west-2
          - helm -f helm/values.yaml upgrade ${DEPLOYMENT} helm -n ${NAMESPACE} --set image.tag=${TAG} --set env.MYSQL_URL=${MYSQL_URL} --set env.MYSQL_USER=${MYSQL_USER} --set env.MYSQL_PWD=${MYSQL_PWD}

pipelines:
  branches:
    develop:
      - step: *docker-build-push
      - step: *helm-deploy